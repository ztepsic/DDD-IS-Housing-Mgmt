@model ISHousingMgmt.Web.Models.Account.RegisterManagerUserModel

@{
    Layout = "~/Views/Shared/_12Layout.cshtml";
	ViewBag.Title = "Registracija upravitelja";
}

<h2>Registracija upravitelja</h2>
<p>
    Iskoristite formu ispod za registraciju upravitelja.
</p>
<p>
    Lozinka treba biti minimalno dugačka @Membership.MinRequiredPasswordLength znakova.
</p>

<script src="@Url.Content("~/public/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/public/js/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/public/js/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

<script type="text/javascript">
	$(function () {
		$("#submit").click(function (event) {
			$("#Name").removeAttr("disabled");
			$("#NumberOfBankAccount").removeAttr("disabled");
			$("#StreetAddress").removeAttr("disabled");
			$("#StreetAddressNumber").removeAttr("disabled");
			$("#Address_City_Id").removeAttr("disabled");
			$("#TelephoneNumber").removeAttr("disabled");
			$("#MobileNumber").removeAttr("disabled");
		});

		var personExists = false;
		$("#Oib").change(function (event) {
			var oib = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "@Url.Action("exists", new { controller = "person" })",
			  data: {oib:oib},
			  success: function(data){
				if(data != null){
					personExists = true;

					$("#Name").attr("disabled","disabled");
					$("#NumberOfBankAccount").attr("disabled", "disabled");
					$("#StreetAddress").attr("disabled","disabled");
					$("#StreetAddressNumber").attr("disabled","disabled");
					$("#City").attr("disabled","disabled");
					$("#TelephoneNumber").attr("disabled", "disabled");
					$("#MobileNumber").attr("disabled", "disabled");

					$("#Name").val(data.Person.Name);
					$("#StreetAddress").val(data.Person.Address.StreetAddress);
					$("#StreetAddressNumber").val(data.Person.Address.StreetAddressNumber);
					$("#City").val(data.Person.Address.City.Id);
					$("#NumberOfBankAccount").val(data.Person.NumberOfBankAccount);

					$(".error").remove();
					$(".notice").remove();

					if(data.UserExists){
						$("#submit").attr("disabled", "disabled");	
						$("#person").before('<div class="error">Navedena osoba već ima kreiran korisnički račun.</div>');
					} else {
						if(data.Person.Surname != null){
							$("#submit").attr("disabled", "disabled");	
							$("#person").before('<div class="error">Osoba sa istim OIB-om već postoji. Osoba nije pravna osoba. Molimo registrirajte drugu pravnu osobu.</div>');
						} else {
							$("#submit").removeAttr("disabled");
							$("#person").before('<div class="notice">Osoba sa istim OIB-om već postoji. Ukoliko zadržite takav OIB zadržati će se podaci već upisani u sustavu.</div>');
						}
					}

				} else {
					$("#Name").removeAttr("disabled");
					$("#NumberOfBankAccount").removeAttr("disabled");
					$("#StreetAddress").removeAttr("disabled");
					$("#StreetAddressNumber").removeAttr("disabled");
					$("#City").removeAttr("disabled");
					$("#TelephoneNumber").removeAttr("disabled");
					$("#MobileNumber").removeAttr("disabled");
					$("#submit").removeAttr("disabled");	

					if(personExists == true){
						personExists = false;
						$("#Name").val("");
						$("#Surname").val("");
						$("#StreetAddress").val("");
						$("#StreetAddressNumber").val("");
						$("#Address_City_Id").val("");
						$("#NumberOfBankAccount").val("");
					}

					$(".error").remove();
					$(".notice").remove();
				}

			  },
			  dataType: "json"
			});
		});
	});
</script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Registracija upravitelja je neuspješna. Ispravite pogreške i pokušajte ponovno.")
    <div>
        <fieldset>
            <legend>Podaci o korisničkom računu</legend>

			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.UserName)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.UserName)
				</div>
			</div>

			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.Email)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.Email)
					
				</div>
			</div>

			<div class="clear"></div>

			<p style="margin-top: 5px;">
				@Html.ValidationMessageFor(m => m.UserName)
				@Html.ValidationMessageFor(m => m.Email)
			</p>

			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.Password)
				</div>
				<div class="editor-field">
					@Html.PasswordFor(m => m.Password)					
				</div>
			</div>

			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.ConfirmPassword)
				</div>
				<div class="editor-field">
					@Html.PasswordFor(m => m.ConfirmPassword)
				</div>
			</div>

			<div class="clear"></div>

			<p style="margin-top: 5px;">
				@Html.ValidationMessageFor(m => m.Password)
				@Html.ValidationMessageFor(m => m.ConfirmPassword)
			</p>

        </fieldset>

		<fieldset>
            <legend>Podaci o pravnoj osobi</legend>

			<div id="person" class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.Name)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.Name)
				</div>
			</div>

			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.Oib)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.Oib)
				</div>
			</div>

			<div class="editor-label">
                @Html.LabelFor(m => m.NumberOfBankAccount)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.NumberOfBankAccount)
            </div>

			<div class="clear"></div>

			<p style="margin-top: 5px;">
				@Html.ValidationMessageFor(m => m.Name)
				@Html.ValidationMessageFor(m => m.Oib)
				@Html.ValidationMessageFor(m => m.NumberOfBankAccount)
			</p>
			
			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.StreetAddress)
				</div>
				<div class="editor-field">
					@Html.EditorFor(m => m.StreetAddress)
				</div>
			</div>

			<div class="field float-left">
			<div class="editor-label">
					@Html.LabelFor(m => m.StreetAddressNumber)
				</div>
				<div class="editor-field">
					@Html.EditorFor(m => m.StreetAddressNumber)
				</div>
			</div>

			<div class="field float-left">
				<div class="editor-label">
						@Html.LabelFor(m => m.City)
					</div>
					<div class="editor-field">
						@Html.DropDownListFor(m => m.City, Model.Cities, "--Odaberi")
					</div>
			</div>

			<div class="clear"></div>

			<p style="margin-top: 5px;">
				@Html.ValidationMessageFor(m => m.StreetAddress)
				@Html.ValidationMessageFor(m => m.StreetAddressNumber)
				@Html.ValidationMessageFor(m => m.City)
			</p>

			
			
			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.TelephoneNumber)
				</div>
				<div class="editor-field">
					@Html.EditorFor(m => m.TelephoneNumber)
				</div>
			</div>

			
			<div class="field float-left">
				<div class="editor-label">
					@Html.LabelFor(m => m.MobileNumber)
				</div>
				<div class="editor-field">
					@Html.EditorFor(m => m.MobileNumber)
				</div>
			</div>

			<div class="clear"></div>

			<p style="margin-top: 5px;">
				@Html.ValidationMessageFor(m => m.TelephoneNumber)
				@Html.ValidationMessageFor(m => m.MobileNumber)
			</p>		
			
        </fieldset>
		
		<p>
			<input id="submit" type="submit" value="Registriraj se" />
		</p>

    </div>
}

